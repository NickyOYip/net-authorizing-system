{
  "contractName": "User",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_certificate",
          "type": "address"
        }
      ],
      "name": "addCertificate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_certificate",
          "type": "address"
        }
      ],
      "name": "addCertifiedCertificate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCertificates",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "certificates",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getCertifiedCertificates",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "certifiedCerts",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_certificate\",\"type\":\"address\"}],\"name\":\"addCertificate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_certificate\",\"type\":\"address\"}],\"name\":\"addCertifiedCertificate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCertificates\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"certificates\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCertifiedCertificates\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"certifiedCerts\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addCertificate(address)\":{\"details\":\"Reverts if the certificate already exists.\",\"params\":{\"_certificate\":\"The address of the certificate to add.\"}},\"addCertifiedCertificate(address)\":{\"details\":\"Reverts if the certificate is already certified.\",\"params\":{\"_certificate\":\"The address of the certificate to certify.\"}},\"getCertificates()\":{\"details\":\"Output example: [\\\"0x123...\\\", \\\"0x456...\\\", \\\"0x789...\\\"]\",\"returns\":{\"certificates\":\"An array of certificate addresses.\"}}},\"title\":\"User Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addCertificate(address)\":{\"notice\":\"Adds a certificate to the general list.\"},\"addCertifiedCertificate(address)\":{\"notice\":\"Adds a certificate to the certified list.\"},\"constructor\":{\"notice\":\"Initializes the User contract and sets the contract owner.\"},\"getCertificates()\":{\"notice\":\"Gets all stored certificates.\"}},\"notice\":\"This contract represents a user's profile, storing certified certificates and encrypted view codes.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/User.sol\":\"User\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/User.sol\":{\"keccak256\":\"0x0a1049072e94c9c00c103ea486a3b476ae7c9907f8233789cbeb44a6dac9e981\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d21075c435fd023129186a26e96577f91d49beba2b19a4fa16ac74e7afcbf8d\",\"dweb:/ipfs/QmPg7dDy4SybtmFdRJnyGiQKnMwEW8bnrqtQEhFGDt4Lyx\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506106c0806100606000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806315dbab89146100515780631f5ddb4f1461006d5780635a58cb081461008b5780637c6ebde9146100a9575b600080fd5b61006b600480360381019061006691906104da565b6100c5565b005b610075610210565b60405161008291906105c5565b60405180910390f35b61009361029e565b6040516100a091906105c5565b60405180910390f35b6100c360048036038101906100be91906104da565b61032c565b005b600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610152576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101499061066a565b60405180910390fd5b6003819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6060600180548060200260200160405190810160405280929190818152602001828054801561029457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161024a575b5050505050905090565b6060600380548060200260200160405190810160405280929190818152602001828054801561032257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116102d8575b5050505050905090565b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156103b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b09061066a565b60405180910390fd5b6001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104a78261047c565b9050919050565b6104b78161049c565b81146104c257600080fd5b50565b6000813590506104d4816104ae565b92915050565b6000602082840312156104f0576104ef610477565b5b60006104fe848285016104c5565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61053c8161049c565b82525050565b600061054e8383610533565b60208301905092915050565b6000602082019050919050565b600061057282610507565b61057c8185610512565b935061058783610523565b8060005b838110156105b857815161059f8882610542565b97506105aa8361055a565b92505060018101905061058b565b5085935050505092915050565b600060208201905081810360008301526105df8184610567565b905092915050565b600082825260208201905092915050565b7f5b557365725d5b416464726573734572725d3a4365727469666963617465206160008201527f6c72656164792065786973747300000000000000000000000000000000000000602082015250565b6000610654602d836105e7565b915061065f826105f8565b604082019050919050565b6000602082019050818103600083015261068381610647565b905091905056fea26469706673582212208bb99d48a1ade4492c7e013b59c92341be425f28311203b4d6a4075242efc26064736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806315dbab89146100515780631f5ddb4f1461006d5780635a58cb081461008b5780637c6ebde9146100a9575b600080fd5b61006b600480360381019061006691906104da565b6100c5565b005b610075610210565b60405161008291906105c5565b60405180910390f35b61009361029e565b6040516100a091906105c5565b60405180910390f35b6100c360048036038101906100be91906104da565b61032c565b005b600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610152576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101499061066a565b60405180910390fd5b6003819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6060600180548060200260200160405190810160405280929190818152602001828054801561029457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161024a575b5050505050905090565b6060600380548060200260200160405190810160405280929190818152602001828054801561032257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116102d8575b5050505050905090565b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156103b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b09061066a565b60405180910390fd5b6001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104a78261047c565b9050919050565b6104b78161049c565b81146104c257600080fd5b50565b6000813590506104d4816104ae565b92915050565b6000602082840312156104f0576104ef610477565b5b60006104fe848285016104c5565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61053c8161049c565b82525050565b600061054e8383610533565b60208301905092915050565b6000602082019050919050565b600061057282610507565b61057c8185610512565b935061058783610523565b8060005b838110156105b857815161059f8882610542565b97506105aa8361055a565b92505060018101905061058b565b5085935050505092915050565b600060208201905081810360008301526105df8184610567565b905092915050565b600082825260208201905092915050565b7f5b557365725d5b416464726573734572725d3a4365727469666963617465206160008201527f6c72656164792065786973747300000000000000000000000000000000000000602082015250565b6000610654602d836105e7565b915061065f826105f8565b604082019050919050565b6000602082019050818103600083015261068381610647565b905091905056fea26469706673582212208bb99d48a1ade4492c7e013b59c92341be425f28311203b4d6a4075242efc26064736f6c634300080d0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4396:4",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:4",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:4",
                "type": ""
              }
            ],
            "src": "7:75:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:4"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:4"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:4",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:4",
                "type": ""
              }
            ],
            "src": "334:126:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:4",
                "type": ""
              }
            ],
            "src": "466:96:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:4"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:4",
                "type": ""
              }
            ],
            "src": "568:122:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "748:87:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "758:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "767:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "758:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "823:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:33:4"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "726:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "734:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:4",
                "type": ""
              }
            ],
            "src": "696:139:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "907:263:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "953:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "955:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "955:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "955:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "928:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "937:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "924:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "924:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "949:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "920:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "920:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "917:119:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1046:117:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1061:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1075:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1065:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1090:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1125:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1136:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1121:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1121:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1145:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1100:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1100:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1090:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "877:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "888:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "900:6:4",
                "type": ""
              }
            ],
            "src": "841:329:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1250:40:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1261:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1277:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1271:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1271:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1261:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1233:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1243:6:4",
                "type": ""
              }
            ],
            "src": "1176:114:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1407:73:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1424:3:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1429:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1417:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1417:19:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1417:19:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1445:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1464:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1469:4:4",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1460:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1460:14:4"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1445:11:4"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1379:3:4",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1384:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "1395:11:4",
                "type": ""
              }
            ],
            "src": "1296:184:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1558:60:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1568:11:4",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "1576:3:4"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "1568:4:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1589:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "1601:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1606:4:4",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1597:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1597:14:4"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "1589:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "1545:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "1553:4:4",
                "type": ""
              }
            ],
            "src": "1486:132:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1679:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1696:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1719:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1701:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1701:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1689:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1689:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1689:37:4"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1667:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1674:3:4",
                "type": ""
              }
            ],
            "src": "1624:108:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1818:99:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1862:6:4"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1870:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1828:33:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1828:46:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1828:46:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1883:28:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1901:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1906:4:4",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1897:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1897:14:4"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "1883:10:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1791:6:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1799:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "1807:10:4",
                "type": ""
              }
            ],
            "src": "1738:179:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1998:38:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2008:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "2020:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2025:4:4",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2016:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2016:14:4"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "2008:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "1985:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "1993:4:4",
                "type": ""
              }
            ],
            "src": "1923:113:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2196:608:4",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2206:68:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2268:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2220:47:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2220:54:4"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2210:6:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2283:93:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2364:3:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2369:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2290:73:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2290:86:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2283:3:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2385:71:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2450:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2400:49:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2400:56:4"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "2389:7:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2465:21:4",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "2479:7:4"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "2469:6:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2555:224:4",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2569:34:4",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "2596:6:4"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "2590:5:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2590:13:4"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "2573:13:4",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2616:70:4",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "2667:13:4"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "2682:3:4"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_address_to_t_address",
                            "nodeType": "YulIdentifier",
                            "src": "2623:43:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2623:63:4"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2616:3:4"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2699:70:4",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "2762:6:4"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "2709:52:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2709:60:4"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2699:6:4"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2517:1:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2520:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2514:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2514:13:4"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2528:18:4",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2530:14:4",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2539:1:4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2542:1:4",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2535:3:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2535:9:4"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2530:1:4"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2499:14:4",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2501:10:4",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2510:1:4",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "2505:1:4",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "2495:284:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2788:10:4",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "2795:3:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2788:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2175:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2182:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2191:3:4",
                "type": ""
              }
            ],
            "src": "2072:732:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2958:225:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2968:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2980:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2991:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2976:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2976:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2968:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3015:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3026:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3011:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3011:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3034:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3040:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3030:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3030:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3004:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3004:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3004:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3060:116:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3162:6:4"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3171:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3068:93:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3068:108:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3060:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2930:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2942:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2953:4:4",
                "type": ""
              }
            ],
            "src": "2810:373:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3285:73:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3302:3:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3307:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3295:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3295:19:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3295:19:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3323:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3342:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3347:4:4",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3338:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3338:14:4"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "3323:11:4"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3257:3:4",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3262:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "3273:11:4",
                "type": ""
              }
            ],
            "src": "3189:169:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3470:126:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3492:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3500:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3488:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3488:14:4"
                      },
                      {
                        "hexValue": "5b557365725d5b416464726573734572725d3a43657274696669636174652061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3504:34:4",
                        "type": "",
                        "value": "[User][AddressErr]:Certificate a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3481:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3481:58:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3481:58:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3560:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3568:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3556:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3556:15:4"
                      },
                      {
                        "hexValue": "6c726561647920657869737473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3573:15:4",
                        "type": "",
                        "value": "lready exists"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3549:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3549:40:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3549:40:4"
                }
              ]
            },
            "name": "store_literal_in_memory_d526c3e4417218dffdfd3bc57e0ee58a778f5c9d1b54fceeaa7e14723616f563",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3462:6:4",
                "type": ""
              }
            ],
            "src": "3364:232:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3748:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3758:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3824:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3829:2:4",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3765:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3765:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3758:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3930:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_d526c3e4417218dffdfd3bc57e0ee58a778f5c9d1b54fceeaa7e14723616f563",
                      "nodeType": "YulIdentifier",
                      "src": "3841:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3841:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3841:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3943:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3954:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3959:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3950:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3950:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3943:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_d526c3e4417218dffdfd3bc57e0ee58a778f5c9d1b54fceeaa7e14723616f563_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3736:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3744:3:4",
                "type": ""
              }
            ],
            "src": "3602:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4145:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4155:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4167:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4178:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4163:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4163:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4155:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4202:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4213:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4198:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4198:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4221:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4227:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4217:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4217:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4191:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4191:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4191:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4247:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4381:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_d526c3e4417218dffdfd3bc57e0ee58a778f5c9d1b54fceeaa7e14723616f563_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4255:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4255:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4247:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d526c3e4417218dffdfd3bc57e0ee58a778f5c9d1b54fceeaa7e14723616f563__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4125:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4140:4:4",
                "type": ""
              }
            ],
            "src": "3974:419:4"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d526c3e4417218dffdfd3bc57e0ee58a778f5c9d1b54fceeaa7e14723616f563(memPtr) {\n\n        mstore(add(memPtr, 0), \"[User][AddressErr]:Certificate a\")\n\n        mstore(add(memPtr, 32), \"lready exists\")\n\n    }\n\n    function abi_encode_t_stringliteral_d526c3e4417218dffdfd3bc57e0ee58a778f5c9d1b54fceeaa7e14723616f563_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_d526c3e4417218dffdfd3bc57e0ee58a778f5c9d1b54fceeaa7e14723616f563(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d526c3e4417218dffdfd3bc57e0ee58a778f5c9d1b54fceeaa7e14723616f563__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d526c3e4417218dffdfd3bc57e0ee58a778f5c9d1b54fceeaa7e14723616f563_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 4,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "216:2430:3:-:0;;;952:51;;;;;;;;;;985:10;977:5;;:18;;;;;;;;;;;;;;;;;;216:2430;;;;;;",
  "deployedSourceMap": "216:2430:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:273;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2163:123;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2502:139;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1206:265;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1688:273;1772:17;:31;1790:12;1772:31;;;;;;;;;;;;;;;;;;;;;;;;;1771:32;1763:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;1864:21;1891:12;1864:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1949:4;1915:17;:31;1933:12;1915:31;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;1688:273;:::o;2163:123::-;2213:29;2262:16;2255:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2163:123;:::o;2502:139::-;2561:31;2612:21;2605:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2502:139;:::o;1206:265::-;1281:20;:34;1302:12;1281:34;;;;;;;;;;;;;;;;;;;;;;;;;1280:35;1272:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;1376:16;1398:12;1376:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1459:4;1422:20;:34;1443:12;1422:34;;;;;;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;1206:265;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:114::-;1243:6;1277:5;1271:12;1261:22;;1176:114;;;:::o;1296:184::-;1395:11;1429:6;1424:3;1417:19;1469:4;1464:3;1460:14;1445:29;;1296:184;;;;:::o;1486:132::-;1553:4;1576:3;1568:11;;1606:4;1601:3;1597:14;1589:22;;1486:132;;;:::o;1624:108::-;1701:24;1719:5;1701:24;:::i;:::-;1696:3;1689:37;1624:108;;:::o;1738:179::-;1807:10;1828:46;1870:3;1862:6;1828:46;:::i;:::-;1906:4;1901:3;1897:14;1883:28;;1738:179;;;;:::o;1923:113::-;1993:4;2025;2020:3;2016:14;2008:22;;1923:113;;;:::o;2072:732::-;2191:3;2220:54;2268:5;2220:54;:::i;:::-;2290:86;2369:6;2364:3;2290:86;:::i;:::-;2283:93;;2400:56;2450:5;2400:56;:::i;:::-;2479:7;2510:1;2495:284;2520:6;2517:1;2514:13;2495:284;;;2596:6;2590:13;2623:63;2682:3;2667:13;2623:63;:::i;:::-;2616:70;;2709:60;2762:6;2709:60;:::i;:::-;2699:70;;2555:224;2542:1;2539;2535:9;2530:14;;2495:284;;;2499:14;2795:3;2788:10;;2196:608;;;2072:732;;;;:::o;2810:373::-;2953:4;2991:2;2980:9;2976:18;2968:26;;3040:9;3034:4;3030:20;3026:1;3015:9;3011:17;3004:47;3068:108;3171:4;3162:6;3068:108;:::i;:::-;3060:116;;2810:373;;;;:::o;3189:169::-;3273:11;3307:6;3302:3;3295:19;3347:4;3342:3;3338:14;3323:29;;3189:169;;;;:::o;3364:232::-;3504:34;3500:1;3492:6;3488:14;3481:58;3573:15;3568:2;3560:6;3556:15;3549:40;3364:232;:::o;3602:366::-;3744:3;3765:67;3829:2;3824:3;3765:67;:::i;:::-;3758:74;;3841:93;3930:3;3841:93;:::i;:::-;3959:2;3954:3;3950:12;3943:19;;3602:366;;;:::o;3974:419::-;4140:4;4178:2;4167:9;4163:18;4155:26;;4227:9;4221:4;4217:20;4213:1;4202:9;4198:17;4191:47;4255:131;4381:4;4255:131;:::i;:::-;4247:139;;3974:419;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\n/**\r\n * @title User Contract\r\n * @notice This contract represents a user's profile, storing certified certificates and encrypted view codes.\r\n */\r\ncontract User {\r\n    address private owner;\r\n\r\n    // Array to store addresses of certified certificates\r\n    address[] private certificatesList;\r\n    mapping(address => bool) private isInCertificatesList; // Track existence\r\n\r\n    // Array to store addresses of certified certificates\r\n    address[] private certifiedCertificates;\r\n    mapping(address => bool) private isInCertifiedList; // Track existence\r\n\r\n\r\n    /**\r\n     * @notice Modifier to restrict functions to the contract owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"[User][AddressErr]:Not the contract owner.\");\r\n        _;\r\n    }\r\n    \r\n    /**\r\n     * @notice Initializes the User contract and sets the contract owner.\r\n     */\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n    /**\r\n     * @notice Adds a certificate to the general list.\r\n     * @param _certificate The address of the certificate to add.\r\n     * @dev Reverts if the certificate already exists.\r\n     */\r\n    function addCertificate(address _certificate) external {\r\n        require(!isInCertificatesList[_certificate], \"[User][AddressErr]:Certificate already exists\");\r\n        certificatesList.push(_certificate);\r\n        isInCertificatesList[_certificate] = true;\r\n    }\r\n\r\n    /**\r\n     * @notice Adds a certificate to the certified list.\r\n     * @param _certificate The address of the certificate to certify.\r\n     * @dev Reverts if the certificate is already certified.\r\n     */\r\n    function addCertifiedCertificate(address _certificate) external {\r\n        require(!isInCertifiedList[_certificate], \"[User][AddressErr]:Certificate already exists\");\r\n        certifiedCertificates.push(_certificate);\r\n        isInCertifiedList[_certificate] = true;\r\n    }\r\n\r\n    /**\r\n     * @notice Gets all stored certificates.\r\n     * @return certificates An array of certificate addresses.\r\n     * @dev Output example: [\"0x123...\", \"0x456...\", \"0x789...\"]\r\n     */\r\n    function getCertificates() external view returns (address[] memory certificates) {\r\n        return certificatesList;\r\n    }\r\n\r\n    /*\r\n     * @notice Gets all certified certificates.\r\n     * @return certifiedCerts An array of certified certificate addresses.\r\n     * @dev Output example: [\"0xabc...\", \"0xdef...\", \"0xghi...\"]\r\n     */\r\n    function getCertifiedCertificates() external view returns (address[] memory certifiedCerts) {\r\n        return certifiedCertificates;\r\n    }\r\n\r\n}\r\n",
  "sourcePath": "C:\\Users\\nicky\\Desktop\\net-authorizing-system\\contracts\\User.sol",
  "ast": {
    "absolutePath": "project:/contracts/User.sol",
    "exportedSymbols": {
      "User": [
        569
      ]
    },
    "id": 570,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 455,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:3"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "User",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 456,
          "nodeType": "StructuredDocumentation",
          "src": "69:145:3",
          "text": " @title User Contract\n @notice This contract represents a user's profile, storing certified certificates and encrypted view codes."
        },
        "fullyImplemented": true,
        "id": 569,
        "linearizedBaseContracts": [
          569
        ],
        "name": "User",
        "nameLocation": "225:4:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 458,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "253:5:3",
            "nodeType": "VariableDeclaration",
            "scope": 569,
            "src": "237:21:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 457,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "237:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 461,
            "mutability": "mutable",
            "name": "certificatesList",
            "nameLocation": "344:16:3",
            "nodeType": "VariableDeclaration",
            "scope": 569,
            "src": "326:34:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 459,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "326:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 460,
              "nodeType": "ArrayTypeName",
              "src": "326:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 465,
            "mutability": "mutable",
            "name": "isInCertificatesList",
            "nameLocation": "400:20:3",
            "nodeType": "VariableDeclaration",
            "scope": 569,
            "src": "367:53:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 464,
              "keyType": {
                "id": 462,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "375:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "367:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 463,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "386:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 468,
            "mutability": "mutable",
            "name": "certifiedCertificates",
            "nameLocation": "525:21:3",
            "nodeType": "VariableDeclaration",
            "scope": 569,
            "src": "507:39:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 466,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "507:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 467,
              "nodeType": "ArrayTypeName",
              "src": "507:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 472,
            "mutability": "mutable",
            "name": "isInCertifiedList",
            "nameLocation": "586:17:3",
            "nodeType": "VariableDeclaration",
            "scope": 569,
            "src": "553:50:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 471,
              "keyType": {
                "id": 469,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "561:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "553:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 470,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "572:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 484,
              "nodeType": "Block",
              "src": "742:105:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 476,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "761:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "761:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 478,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 458,
                          "src": "775:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "761:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5b557365725d5b416464726573734572725d3a4e6f742074686520636f6e7472616374206f776e65722e",
                        "id": 480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "782:44:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30425bbaea5ee81a38d921e90c09ffda33c172f29601c2cd7844f32975f4afbe",
                          "typeString": "literal_string \"[User][AddressErr]:Not the contract owner.\""
                        },
                        "value": "[User][AddressErr]:Not the contract owner."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30425bbaea5ee81a38d921e90c09ffda33c172f29601c2cd7844f32975f4afbe",
                          "typeString": "literal_string \"[User][AddressErr]:Not the contract owner.\""
                        }
                      ],
                      "id": 475,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "753:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "753:74:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 482,
                  "nodeType": "ExpressionStatement",
                  "src": "753:74:3"
                },
                {
                  "id": 483,
                  "nodeType": "PlaceholderStatement",
                  "src": "838:1:3"
                }
              ]
            },
            "documentation": {
              "id": 473,
              "nodeType": "StructuredDocumentation",
              "src": "633:82:3",
              "text": " @notice Modifier to restrict functions to the contract owner."
            },
            "id": 485,
            "name": "onlyOwner",
            "nameLocation": "730:9:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 474,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "739:2:3"
            },
            "src": "721:126:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 494,
              "nodeType": "Block",
              "src": "966:37:3",
              "statements": [
                {
                  "expression": {
                    "id": 492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 489,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 458,
                      "src": "977:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 490,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "985:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "985:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "977:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 493,
                  "nodeType": "ExpressionStatement",
                  "src": "977:18:3"
                }
              ]
            },
            "documentation": {
              "id": 486,
              "nodeType": "StructuredDocumentation",
              "src": "859:87:3",
              "text": " @notice Initializes the User contract and sets the contract owner."
            },
            "id": 495,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 487,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "963:2:3"
            },
            "returnParameters": {
              "id": 488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "966:0:3"
            },
            "scope": 569,
            "src": "952:51:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 521,
              "nodeType": "Block",
              "src": "1261:210:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1280:35:3",
                        "subExpression": {
                          "baseExpression": {
                            "id": 502,
                            "name": "isInCertificatesList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 465,
                            "src": "1281:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 504,
                          "indexExpression": {
                            "id": 503,
                            "name": "_certificate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 498,
                            "src": "1302:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1281:34:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5b557365725d5b416464726573734572725d3a436572746966696361746520616c726561647920657869737473",
                        "id": 506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1317:47:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d526c3e4417218dffdfd3bc57e0ee58a778f5c9d1b54fceeaa7e14723616f563",
                          "typeString": "literal_string \"[User][AddressErr]:Certificate already exists\""
                        },
                        "value": "[User][AddressErr]:Certificate already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d526c3e4417218dffdfd3bc57e0ee58a778f5c9d1b54fceeaa7e14723616f563",
                          "typeString": "literal_string \"[User][AddressErr]:Certificate already exists\""
                        }
                      ],
                      "id": 501,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1272:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1272:93:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 508,
                  "nodeType": "ExpressionStatement",
                  "src": "1272:93:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 512,
                        "name": "_certificate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 498,
                        "src": "1398:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 509,
                        "name": "certificatesList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 461,
                        "src": "1376:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1376:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1376:35:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 514,
                  "nodeType": "ExpressionStatement",
                  "src": "1376:35:3"
                },
                {
                  "expression": {
                    "id": 519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 515,
                        "name": "isInCertificatesList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 465,
                        "src": "1422:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 517,
                      "indexExpression": {
                        "id": 516,
                        "name": "_certificate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 498,
                        "src": "1443:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1422:34:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1459:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1422:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 520,
                  "nodeType": "ExpressionStatement",
                  "src": "1422:41:3"
                }
              ]
            },
            "documentation": {
              "id": 496,
              "nodeType": "StructuredDocumentation",
              "src": "1009:191:3",
              "text": " @notice Adds a certificate to the general list.\n @param _certificate The address of the certificate to add.\n @dev Reverts if the certificate already exists."
            },
            "functionSelector": "7c6ebde9",
            "id": 522,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addCertificate",
            "nameLocation": "1215:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 498,
                  "mutability": "mutable",
                  "name": "_certificate",
                  "nameLocation": "1238:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 522,
                  "src": "1230:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 497,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1230:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1229:22:3"
            },
            "returnParameters": {
              "id": 500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1261:0:3"
            },
            "scope": 569,
            "src": "1206:265:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 548,
              "nodeType": "Block",
              "src": "1752:209:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1771:32:3",
                        "subExpression": {
                          "baseExpression": {
                            "id": 529,
                            "name": "isInCertifiedList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 472,
                            "src": "1772:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 531,
                          "indexExpression": {
                            "id": 530,
                            "name": "_certificate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 525,
                            "src": "1790:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1772:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5b557365725d5b416464726573734572725d3a436572746966696361746520616c726561647920657869737473",
                        "id": 533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1805:47:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d526c3e4417218dffdfd3bc57e0ee58a778f5c9d1b54fceeaa7e14723616f563",
                          "typeString": "literal_string \"[User][AddressErr]:Certificate already exists\""
                        },
                        "value": "[User][AddressErr]:Certificate already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d526c3e4417218dffdfd3bc57e0ee58a778f5c9d1b54fceeaa7e14723616f563",
                          "typeString": "literal_string \"[User][AddressErr]:Certificate already exists\""
                        }
                      ],
                      "id": 528,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1763:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1763:90:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 535,
                  "nodeType": "ExpressionStatement",
                  "src": "1763:90:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 539,
                        "name": "_certificate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 525,
                        "src": "1891:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 536,
                        "name": "certifiedCertificates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 468,
                        "src": "1864:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1864:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1864:40:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 541,
                  "nodeType": "ExpressionStatement",
                  "src": "1864:40:3"
                },
                {
                  "expression": {
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 542,
                        "name": "isInCertifiedList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 472,
                        "src": "1915:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 544,
                      "indexExpression": {
                        "id": 543,
                        "name": "_certificate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 525,
                        "src": "1933:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1915:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1949:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1915:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 547,
                  "nodeType": "ExpressionStatement",
                  "src": "1915:38:3"
                }
              ]
            },
            "documentation": {
              "id": 523,
              "nodeType": "StructuredDocumentation",
              "src": "1479:203:3",
              "text": " @notice Adds a certificate to the certified list.\n @param _certificate The address of the certificate to certify.\n @dev Reverts if the certificate is already certified."
            },
            "functionSelector": "15dbab89",
            "id": 549,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addCertifiedCertificate",
            "nameLocation": "1697:23:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 525,
                  "mutability": "mutable",
                  "name": "_certificate",
                  "nameLocation": "1729:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 549,
                  "src": "1721:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 524,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1721:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1720:22:3"
            },
            "returnParameters": {
              "id": 527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1752:0:3"
            },
            "scope": 569,
            "src": "1688:273:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 558,
              "nodeType": "Block",
              "src": "2244:42:3",
              "statements": [
                {
                  "expression": {
                    "id": 556,
                    "name": "certificatesList",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 461,
                    "src": "2262:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 555,
                  "id": 557,
                  "nodeType": "Return",
                  "src": "2255:23:3"
                }
              ]
            },
            "documentation": {
              "id": 550,
              "nodeType": "StructuredDocumentation",
              "src": "1969:188:3",
              "text": " @notice Gets all stored certificates.\n @return certificates An array of certificate addresses.\n @dev Output example: [\"0x123...\", \"0x456...\", \"0x789...\"]"
            },
            "functionSelector": "1f5ddb4f",
            "id": 559,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCertificates",
            "nameLocation": "2172:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2187:2:3"
            },
            "returnParameters": {
              "id": 555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 554,
                  "mutability": "mutable",
                  "name": "certificates",
                  "nameLocation": "2230:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "2213:29:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 552,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2213:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 553,
                    "nodeType": "ArrayTypeName",
                    "src": "2213:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2212:31:3"
            },
            "scope": 569,
            "src": "2163:123:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 567,
              "nodeType": "Block",
              "src": "2594:47:3",
              "statements": [
                {
                  "expression": {
                    "id": 565,
                    "name": "certifiedCertificates",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 468,
                    "src": "2612:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 564,
                  "id": 566,
                  "nodeType": "Return",
                  "src": "2605:28:3"
                }
              ]
            },
            "functionSelector": "5a58cb08",
            "id": 568,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCertifiedCertificates",
            "nameLocation": "2511:24:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 560,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2535:2:3"
            },
            "returnParameters": {
              "id": 564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 563,
                  "mutability": "mutable",
                  "name": "certifiedCerts",
                  "nameLocation": "2578:14:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 568,
                  "src": "2561:31:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 561,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2561:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 562,
                    "nodeType": "ArrayTypeName",
                    "src": "2561:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2560:33:3"
            },
            "scope": 569,
            "src": "2502:139:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 570,
        "src": "216:2430:3",
        "usedErrors": []
      }
    ],
    "src": "33:2615:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xCa6Cc8733b0Af2479968D401DEc6828a94135Cf8",
      "transactionHash": "0x507e0fbd72ec5c7d0e2ca6217750d20ce4eeae39c282abf8244688b130dc031d"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-02-16T18:51:46.780Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addCertificate(address)": {
        "details": "Reverts if the certificate already exists.",
        "params": {
          "_certificate": "The address of the certificate to add."
        }
      },
      "addCertifiedCertificate(address)": {
        "details": "Reverts if the certificate is already certified.",
        "params": {
          "_certificate": "The address of the certificate to certify."
        }
      },
      "getCertificates()": {
        "details": "Output example: [\"0x123...\", \"0x456...\", \"0x789...\"]",
        "returns": {
          "certificates": "An array of certificate addresses."
        }
      }
    },
    "title": "User Contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addCertificate(address)": {
        "notice": "Adds a certificate to the general list."
      },
      "addCertifiedCertificate(address)": {
        "notice": "Adds a certificate to the certified list."
      },
      "constructor": {
        "notice": "Initializes the User contract and sets the contract owner."
      },
      "getCertificates()": {
        "notice": "Gets all stored certificates."
      }
    },
    "notice": "This contract represents a user's profile, storing certified certificates and encrypted view codes.",
    "version": 1
  }
}